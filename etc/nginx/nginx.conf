# this sets the user nginx will run as,
# and the number of worker processes

user nobody nogroup;
worker_processes 1;
worker_rlimit_nofile 30000;

# setup where nginx will log errors to
# and where the nginx process id resides
error_log /home/pi/app/log/nginx.error.log;
pid /run/nginx.pid;

events {
  worker_connections  1024;
  # set to on if you have more than 1 worker_processes
  accept_mutex off;
}

http {
  include /etc/nginx/mime.types;

  default_type application/octet-stream;
  access_log /home/pi/app/log/nginx.access.log combined;

  # use the kernel sendfile
  sendfile on;
  # prepend http headers before sendfile()
  tcp_nopush on;

  # keepalive_timeout 5;
  tcp_nodelay on;

  gzip on;
  gzip_vary on;
  gzip_min_length 500;

  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_types text/plain text/xml text/css
     text/comma-separated-values
     text/javascript application/x-javascript
     application/atom+xml image/x-icon;

  map $http_upgrade $connection_upgrade {
    default Upgrade;
    ''      close;
  }

  upstream opendoor {
    server 127.0.0.1:3000;
  }

  server {
    listen 80 default_server;
    #listen [::]:80 default_server;

    server_name opendoor;
    return 302 https://$server_name$request_uri;
  }

  # configure the virtual host
  server {
    # replace with your domain name
    server_name opendoor;

    # replace this with your static Sinatra app files, root + public
    root /home/pi/app/public;

    # port to listen for ssl requests
    listen 443 ssl default_server;
    #listen [::]:443 ssl default_server;

    ssl_certificate /etc/ssl/certs/opendoor.crt;
    ssl_certificate_key /etc/ssl/private/opendoor.key;

    include ssl-params.conf;

    # maximum accepted body size of client request
    client_max_body_size 4G;

    # the server will close connections after this time
    keepalive_timeout 5;

    location / {
      try_files $uri @app;
    }

    location @app {
      proxy_pass http://opendoor;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;
      proxy_connect_timeout 24d;
      proxy_send_timeout 24d;
      proxy_read_timeout 24d;
    }
  }
}

